<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>0836c109-ac00-475a-8c09-8541e434e136</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <Configurations>Debug;Release;Docker;LocalDocker</Configurations>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="appsettings.Development.json" />
    <Content Remove="appsettings.Docker.json" />
    <Content Remove="appsettings.json" />
    <Content Remove="appsettings.Release.json" />
    <Content Remove="nlog.config" />
    <Content Remove="nlog.Docker.config" />
  </ItemGroup>

  <ItemGroup>
    <None Include="appsettings.Development.json" />
    <None Include="appsettings.Docker.json" />
    <None Include="appsettings.json" />
    <None Include="appsettings.Release.json" />
    <None Include="nlog.config" />
    <None Include="nlog.Docker.config" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.8" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.21.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Auth.Shared\Auth.Shared.csproj" />
    <ProjectReference Include="..\Persistence\Persistence.csproj" />
    <ProjectReference Include="..\RedisService\Repositories.csproj" />
    <ProjectReference Include="..\Shared\Shared.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(MSBuildProjectName)' == 'chat-backend'">
    <!-- Include Development configuration -->
    <Content Include="appsettings.Development.json" Condition="'$(Configuration)' == 'Development'" CopyToOutputDirectory="PreserveNewest" />
    <Content Remove="appsettings.Development.json" Condition="'$(Configuration)' != 'Development'" />

    <!-- Include Release configuration -->
    <Content Include="appsettings.Release.json" Condition="'$(Configuration)' == 'Release'" CopyToOutputDirectory="PreserveNewest" />
    <Content Remove="appsettings.Release.json" Condition="'$(Configuration)' != 'Release'" />

    <!-- Include Docker configuration -->
    <Content Include="appsettings.Docker.json" Condition="'$(Configuration)' == 'Docker'" CopyToOutputDirectory="PreserveNewest" />
    <Content Remove="appsettings.Docker.json" Condition="'$(Configuration)' != 'Docker'" />

    <Content Include="appsettings.LocalDocker.json" Condition="'$(Configuration)' == 'LocalDocker'" CopyToOutputDirectory="PreserveNewest" />
    <Content Remove="appsettings.LocalDocker.json" Condition="'$(Configuration)' != 'LocalDocker'" />
    
    <Content Update="nlog.config" CopyToOutputDirectory="PreserveNewest" CopyToPublishDirectory="PreserveNewest" />
  </ItemGroup>

</Project>
